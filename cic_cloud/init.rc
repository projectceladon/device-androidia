# ----------------- BEGIN MIX-IN DEFINITIONS -----------------
# Mix-In definitions are auto-generated by mixin-update
##############################################################
# Source: device/intel/mixins/groups/device-specific/cic-cloud/init.rc
##############################################################
on early-init

    # Create symbol link for binder device
    chmod 0666 /dev/binderfs/binder
    symlink /dev/binderfs/binder /dev/binder

    chmod 0666 /dev/binderfs/vndbinder
    symlink /dev/binderfs/vndbinder /dev/vndbinder

    chmod 0666 /dev/binderfs/hwbinder
    symlink /dev/binderfs/hwbinder /dev/hwbinder

    # Mount debugfs and make it writable so that debuggerd can
    # create stack traces, required with newer kernels
    mount debugfs debugfs /sys/kernel/debug
    chmod 0755 /sys/kernel/debug

    # Mount cgroup mount point for cpu accounting
    mount cgroup none /acct nodev noexec nosuid cpu,cpuacct
    mkdir /acct/uid

on early-boot
    # Needed by surfaceflinger to enable it to open trace_marker
    # on start without file permissions error.
    chmod 0222 /sys/kernel/debug/tracing/trace_marker
    # tracefs is mounted after 1st access to it
    chmod 0755 /sys/kernel/debug/tracing

on init
    copy /dev/cpuset/cpuset.cpus /dev/cpuset/foreground/cpuset.cpus
    copy /dev/cpuset/cpuset.mems /dev/cpuset/foreground/cpuset.mems

    copy /dev/cpuset/cpuset.cpus /dev/cpuset/background/cpuset.cpus
    copy /dev/cpuset/cpuset.mems /dev/cpuset/background/cpuset.mems

    copy /dev/cpuset/cpuset.cpus /dev/cpuset/system-background/cpuset.cpus
    copy /dev/cpuset/cpuset.mems /dev/cpuset/system-background/cpuset.mems

    copy /dev/cpuset/cpuset.cpus /dev/cpuset/restricted/cpuset.cpus
    copy /dev/cpuset/cpuset.mems /dev/cpuset/restricted/cpuset.mems

    copy /dev/cpuset/cpuset.cpus /dev/cpuset/top-app/cpuset.cpus
    copy /dev/cpuset/cpuset.mems /dev/cpuset/top-app/cpuset.mems

on fs
    mount_all /fstab.${ro.hardware}

on boot
    # enable fake battery state, details in system/core/healthd/BatteryMonitor.cpp
    setprop ro.boot.fake_battery 1

    # Disable rild
    setprop ro.radio.noril yes
    stop ril-daemon
    write /proc/sys/kernel/ns_pid_max 32768
    chmod 0777 /ipc

on boot && property:ro.boot.icr.internal=1
    class_start icr_service

service icr_encode_service_intel /system/vendor/bin/hw/icr_encoder ${ro.container.id} -streaming -res ${ro.boot.icr.res.x}x${ro.boot.icr.res.y} -fr ${ro.config.media_fps} -url ${sys.icr.media_url} -plugin ${ro.config.icr.plugin} -lowpower -quality 4 -ratectrl ${ro.config.media_rc_mode} -b 3.3M -maxrate 6.6M -hwc_sock /ipc/hwc-sock -tcae 0 -renderfps_enc ${ro.boot.icr.rfps.enc}
    class icr_service
    user system
    group system
##############################################################
# Source: device/intel/mixins/groups/debug-crashlogd/true/init.rc
##############################################################
on post-fs-data
##    mkdir /data/tombstones 0775 system system
    mkdir /data/system 0755 system system
    mkdir /data/system/dropbox 0700 system system
    mkdir /data/logs/modemcrash 0775 system system
    mkdir /data/logs/stats 0775 system system
    mkdir /data/logs/aplogs 0775 system log
    trigger delayed-fs-data

on delayed-fs-data
    mkdir /data/tombstones 0775 system system

service vendor.crashlogd /system/vendor/bin/crashlogd
    class late_start

# started by vendor/intel/log_capture/crashlog
service vendor.logsystemstate /system/vendor/bin/dumpstate_dropbox.sh -v
    disabled
    oneshot
##############################################################
# Source: device/intel/mixins/groups/debug-logs/true/init.rc
##############################################################
on post-fs-data
    mkdir /data/logs 0770 system log

on property:persist.vendor.service.aplogfs.enable=0
    stop vendor.ap_logfs

on property:persist.vendor.service.aplogfs.enable=1
    setprop persist.vendor.service.apklogfs.enable 0
    restart vendor.ap_log_srv

on property:persist.vendor.service.apklogfs.enable=0
    stop vendor.apk_logfs

on property:persist.vendor.service.apklogfs.enable=1
    setprop persist.vendor.service.aplogfs.enable 0
    restart vendor.ap_log_srv

service vendor.apk_logfs /vendor/bin/logcat_ep.sh auto \
        -b main -b system -b radio -b events -b crash -b kernel \
        -v threadtime -f /data/logs/aplog
    user root
    group root log
    disabled

service vendor.ap_logfs /vendor/bin/logcat_ep.sh auto \
        -b main -b system -b radio -b events -b crash \
        -v threadtime -f /data/logs/aplog
    user root
    group root log
    disabled

# Service called at boot time after data is decrypted
#
# This is done through the late_start class or through persist properties
# that are only available after data is decrypted.
# The service may be called again when the properties are updated.
service vendor.ap_log_srv /vendor/bin/start_log_srv.sh
    user root
    group root log
    oneshot

on boot
    start vendor.ap_log_srv

service vendor.earlylogs /vendor/bin/elogs.sh
    class core
    oneshot

on nonencrypted
    stop vendor.earlylogs

on property:vold.decrypt=trigger_restart_framework
    stop vendor.earlylogs

on property:persist.vendor.service.elogs.enable=1
    mkdir /cache/elogs 0770 system log
    restorecon /cache/elogs

on property:persist.vendor.service.elogs.enable=0
    exec -- /system/bin/rm -rf /cache/elogs
##############################################################
# Source: device/intel/mixins/groups/graphics/true/init.rc
##############################################################
on boot
    setprop debug.egl.printFPS  60
    setprop ro.sf.disable_triple_buffer 1

##############################################################
# Source: device/intel/mixins/groups/houdini/true/init.rc
##############################################################
# Enable native bridge for target executables
on early-init
    mount binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc

on property:ro.vendor.enable.native.bridge.exec=1
    copy /system/vendor/etc/binfmt_misc/arm_exe /proc/sys/fs/binfmt_misc/register
    copy /system/vendor/etc/binfmt_misc/arm_dyn /proc/sys/fs/binfmt_misc/register

on property:ro.vendor.enable.native.bridge.exec64=1
    copy /system/vendor/etc/binfmt_misc/arm64_exe /proc/sys/fs/binfmt_misc/register
    copy /system/vendor/etc/binfmt_misc/arm64_dyn /proc/sys/fs/binfmt_misc/register
##############################################################
# Source: device/intel/mixins/groups/neuralnetworks/true/init.rc
##############################################################
on post-fs-data
    mkdir /data/vendor/neuralnetworks 0770 system system
##############################################################
# Source: device/intel/mixins/groups/wlan/dummy/init.rc
##############################################################
on boot
    setprop wifi.interface wlan0

service wpa_supplicant /vendor/bin/hw/wpa_supplicant -Dnl80211 -iwlan0 -c/vendor/etc/wifi/wpa_supplicant.conf -g@android:wpa_wlan0
    socket wpa_wlan0 dgram 660 wifi wifi
    group system wifi inet
    oneshot
    disabled
##############################################################
# Source: device/intel/mixins/groups/codec2/true/init.rc
##############################################################
on post-fs
    chmod 0664 /dev/ion
    chown system system /dev/ion
# ------------------ END MIX-IN DEFINITIONS ------------------
